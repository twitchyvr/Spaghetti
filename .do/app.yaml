# DigitalOcean App Platform specification for Enterprise Documentation Platform
# This configures a multi-service deployment with separate frontend and API services

name: spaghetti-platform
region: nyc

# Global environment variables (inherited by all services)
# Note: These will be configured as encrypted secrets in DigitalOcean App Platform
envs:
- key: dbhost
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: dbport
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: dbusername
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: dbpassword
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: dbdatabase
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: dbsslmode
  scope: RUN_AND_BUILD_TIME
  type: SECRET
- key: DATABASE_URL
  scope: RUN_AND_BUILD_TIME
  type: SECRET

# Enable Ubuntu 22 buildpack stack
features:
- buildpack-stack=ubuntu-22

services:
# .NET Core API Service
- name: spaghetti-api
  dockerfile_path: src/core/api/Dockerfile
  source_dir: /
  github:
    repo: twitchyvr/Spaghetti
    branch: main
    deploy_on_push: true
  
  # Resource configuration
  instance_count: 1
  instance_size_slug: apps-s-1vcpu-0.5gb
  
  # API runs on port 5000 internally
  http_port: 5000
  
  # Environment variables specific to API service
  envs:
  - key: ASPNETCORE_ENVIRONMENT
    value: Production
  - key: PORT
    value: "5000"
  - key: ASPNETCORE_URLS
    value: http://0.0.0.0:5000
  
  # Health check for API service
  health_check:
    http_path: /health

# React Frontend Service  
- name: spaghetti-frontend
  dockerfile_path: Dockerfile
  source_dir: /
  github:
    repo: twitchyvr/Spaghetti
    branch: main
    deploy_on_push: true
  
  # Resource configuration
  instance_count: 1
  instance_size_slug: apps-s-1vcpu-0.5gb
  
  # Frontend runs on port 8080 (nginx)
  http_port: 8080
  
  # Environment variables for frontend build
  envs:
  - key: VITE_API_BASE_URL
    value: "/api"
  - key: VITE_ENVIRONMENT
    value: "production"
  - key: VITE_DEPLOYMENT_TYPE
    value: "digitalocean"
  - key: VITE_DEMO_MODE
    value: "false"

# Ingress routing configuration
ingress:
  rules:
  # API requests go to the API service
  - component:
      name: spaghetti-api
    match:
      path:
        prefix: /api
  
  # Health check requests go to the API service
  - component:
      name: spaghetti-api
    match:
      path:
        prefix: /health
  
  # All other requests go to the frontend service
  - component:
      name: spaghetti-frontend
    match:
      path:
        prefix: /