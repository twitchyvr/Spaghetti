name: spaghetti-platform
services:
- name: api
  source_dir: src/core/api
  github:
    repo: mattrogers1990/Spaghetti
    branch: main
    deploy_on_push: true
  build_command: dotnet publish -c Release -o out
  run_command: dotnet out/EnterpriseDocsCore.API.dll
  environment_slug: dotnet
  instance_count: 1
  instance_size_slug: professional-xs
  http_port: 5000
  health_check:
    http_path: /health
  envs:
  - key: ASPNETCORE_ENVIRONMENT
    value: DigitalOcean
  - key: ASPNETCORE_URLS
    value: http://0.0.0.0:5000
  - key: DATABASE_URL
    type: SECRET
    value: "$(databaseConnectionString)"
  - key: REDIS_URL
    type: SECRET
    value: "$(redisConnectionString)"
  - key: JWT_SECRET_KEY
    type: SECRET
    value: ThisIsAVerySecureKeyThatShouldBeChangedInProduction123456789!
  - key: ENCRYPTION_KEY
    type: SECRET
    value: change-this-32-character-key-prod
  - key: STORAGE_PROVIDER
    value: Local
  - key: AI_PROVIDER
    value: Mock
  - key: OPENAI_API_KEY
    type: SECRET
    value: ""
  - key: CLAUDE_API_KEY
    type: SECRET
    value: ""
  - key: ELASTICSEARCH_URL
    value: ""

- name: frontend
  source_dir: src/frontend
  github:
    repo: mattrogers1990/Spaghetti
    branch: main
    deploy_on_push: true
  build_command: npm ci --omit=dev && npm run build
  run_command: npm run preview -- --host 0.0.0.0 --port $PORT
  environment_slug: node-js
  instance_count: 1
  instance_size_slug: basic-xxs
  http_port: 8080
  routes:
  - path: /
  envs:
  - key: VITE_API_BASE_URL
    value: https://spaghetti-platform-drgev.ondigitalocean.app
  - key: VITE_ENVIRONMENT
    value: production
  - key: NODE_ENV
    value: production
  - key: PORT
    value: "8080"

databases:
- name: postgres-db
  engine: PG
  version: "14"
  size: db-s-1vcpu-1gb
  num_nodes: 1

- name: redis-cache
  engine: REDIS
  version: "7"
  size: db-s-1vcpu-1gb