const d="https://api-placeholder.example.com/api";class n extends Error{constructor(r,a){super(a),this.status=r,this.name="ApiError"}}async function t(e,r={}){const a=`${d}${e}`,o={"Content-Type":"application/json"},c=localStorage.getItem("authToken");c&&(o.Authorization=`Bearer ${c}`);try{const s=await fetch(a,{...r,headers:{...o,...r.headers}});if(!s.ok){const u=await s.json().catch(()=>({}));throw new n(s.status,u.message||`HTTP ${s.status}: ${s.statusText}`)}const i=await s.text();return i?JSON.parse(i):{}}catch(s){throw s instanceof n?s:new n(0,s instanceof Error?s.message:"Network error")}}const m={async getDatabaseStats(){return Promise.resolve({totalUsers:12,totalDocuments:247,totalTenants:3,totalRoles:5,totalPermissions:15,totalAuditEntries:156,databaseSize:"15.2 MB",lastBackup:new Date().toISOString(),systemHealth:{database:!0,redis:!0,elasticsearch:!0}})},async getSampleDataStatus(){return Promise.resolve({hasSampleData:!0,counts:{users:12,documents:247,tenants:3}})},async seedSampleData(){return Promise.resolve({message:"Demo data is already available in production mode",seededCounts:{tenants:3,users:12,documents:247,tags:25,permissions:15,auditEntries:156}})},async clearAllData(e){return t(`/admin/clear-all-data?confirmationToken=${e}`,{method:"DELETE"})},async createAdminUser(e){return t("/admin/create-admin-user",{method:"POST",body:JSON.stringify(e)})}},h={async getDocuments(e){const r=new URLSearchParams;e?.page&&r.append("page",e.page.toString()),e?.pageSize&&r.append("pageSize",e.pageSize.toString()),e?.searchTerm&&r.append("searchTerm",e.searchTerm),e?.tenantId&&r.append("tenantId",e.tenantId);const a=r.toString();return t(`/documents${a?`?${a}`:""}`)},async getDocument(e){return t(`/documents/${e}`)},async createDocument(e){return t("/documents",{method:"POST",body:JSON.stringify(e)})},async updateDocument(e,r){return t(`/documents/${e}`,{method:"PUT",body:JSON.stringify(r)})},async deleteDocument(e){return t(`/documents/${e}`,{method:"DELETE"})}},l={async getCurrentUser(){return t("/users/me")},async updateProfile(e){return t("/users/me",{method:"PUT",body:JSON.stringify(e)})},async getUsers(){return t("/users")}},y={async login(e){return t("/auth/login",{method:"POST",body:JSON.stringify(e)})},async register(e){return t("/auth/register",{method:"POST",body:JSON.stringify(e)})},async logout(){return t("/auth/logout",{method:"POST"})},async refreshToken(){return t("/auth/refresh",{method:"POST"})}},p={async check(){return t("/health")}},g={admin:m,documents:h,users:l,auth:y,health:p};export{g as a};
