const l={},m=l.VITE_API_BASE_URL||"http://localhost:5001/api",u=l.VITE_DEMO_MODE==="true"||m.includes("api-placeholder");class i extends Error{constructor(e,a){super(a),this.status=e,this.name="ApiError"}}async function s(t,e={}){const a=`${m}${t}`,r={"Content-Type":"application/json"},c=localStorage.getItem("auth_token")||sessionStorage.getItem("auth_token");c&&(r.Authorization=`Bearer ${c}`);try{const n=await fetch(a,{...e,headers:{...r,...e.headers}});if(!n.ok){const h=await n.json().catch(()=>({}));throw new i(n.status,h.message||`HTTP ${n.status}: ${n.statusText}`)}const d=await n.text();return d?JSON.parse(d):{}}catch(n){throw n instanceof i?n:new i(0,n instanceof Error?n.message:"Network error")}}const p={async getDatabaseStats(){if(u)return Promise.resolve({totalUsers:12,totalDocuments:247,totalTenants:3,totalRoles:5,totalPermissions:15,totalAuditEntries:156,databaseSize:"15.2 MB",lastBackup:new Date().toISOString(),systemHealth:{database:!0,redis:!0,elasticsearch:!0}});const t=await s("/admin/database-stats");return{totalUsers:t.users,totalDocuments:t.documents,totalTenants:t.tenants,totalRoles:t.roles,totalPermissions:t.documentPermissions,totalAuditEntries:t.documentAudits+t.userAudits+t.tenantAudits,databaseSize:"0 MB",lastBackup:null,systemHealth:{database:t.databaseStatus==="healthy",redis:!0,elasticsearch:!0}}},async getSampleDataStatus(){if(u)return Promise.resolve({hasSampleData:!0,counts:{users:12,documents:247,tenants:3}});const t=await s("/admin/sample-data-status");return{hasSampleData:t.hasSampleData,counts:{users:t.totalUsers,documents:t.totalDocuments,tenants:t.sampleTenantsCount}}},async seedSampleData(){return u?Promise.resolve({message:"Demo data is already available in production mode",seededCounts:{tenants:3,users:12,documents:247,tags:25,permissions:15,auditEntries:156}}):s("/admin/seed-sample-data",{method:"POST"})},async clearAllData(t){return s(`/admin/clear-all-data?confirmationToken=${t}`,{method:"DELETE"})},async createAdminUser(t){return s("/admin/create-admin-user",{method:"POST",body:JSON.stringify(t)})}},y={async getDocuments(t){const e=new URLSearchParams;t?.page&&e.append("page",t.page.toString()),t?.pageSize&&e.append("pageSize",t.pageSize.toString()),t?.searchTerm&&e.append("searchTerm",t.searchTerm),t?.tenantId&&e.append("tenantId",t.tenantId);const a=e.toString();return s(`/documents${a?`?${a}`:""}`)},async getDocument(t){return s(`/documents/${t}`)},async createDocument(t){return s("/documents",{method:"POST",body:JSON.stringify(t)})},async updateDocument(t,e){return s(`/documents/${t}`,{method:"PUT",body:JSON.stringify(e)})},async deleteDocument(t){return s(`/documents/${t}`,{method:"DELETE"})}},g={async getCurrentUser(){return s("/users/me")},async updateProfile(t){return s("/users/me",{method:"PUT",body:JSON.stringify(t)})},async getUsers(){return s("/users")}},S={async login(t){return s("/auth/login",{method:"POST",body:JSON.stringify(t)})},async register(t){return s("/auth/register",{method:"POST",body:JSON.stringify(t)})},async logout(){return s("/auth/logout",{method:"POST"})},async refreshToken(){return s("/auth/refresh",{method:"POST"})}},f={async check(){return s("/health")}},o={async get(t,e){return{data:await s(t,{...e,method:"GET"})}},async post(t,e,a){return{data:await s(t,{...a,method:"POST",body:e?JSON.stringify(e):null})}},async put(t,e,a){return{data:await s(t,{...a,method:"PUT",body:e?JSON.stringify(e):null})}},async delete(t,e){return{data:await s(t,{...e,method:"DELETE"})}}},T={admin:p,documents:y,users:g,auth:S,health:f,get:o.get,post:o.post,put:o.put,delete:o.delete};export{T as a,y as d};
