import{c as i}from"./index-BioO-Xid.js";/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const T=i("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]);/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const k=i("HardDrive",[["line",{x1:"22",x2:"2",y1:"12",y2:"12",key:"1y58io"}],["path",{d:"M5.45 5.11 2 12v6a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2v-6l-3.45-6.89A2 2 0 0 0 16.76 4H7.24a2 2 0 0 0-1.79 1.11z",key:"oot6mr"}],["line",{x1:"6",x2:"6.01",y1:"16",y2:"16",key:"sgf278"}],["line",{x1:"10",x2:"10.01",y1:"16",y2:"16",key:"1l4acy"}]]);/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const x=i("Server",[["rect",{width:"20",height:"8",x:"2",y:"2",rx:"2",ry:"2",key:"ngkwjq"}],["rect",{width:"20",height:"8",x:"2",y:"14",rx:"2",ry:"2",key:"iecqi9"}],["line",{x1:"6",x2:"6.01",y1:"6",y2:"6",key:"16zg32"}],["line",{x1:"6",x2:"6.01",y1:"18",y2:"18",key:"nzw8ys"}]]),l={},m=l.VITE_API_BASE_URL||"http://localhost:5001/api",r=l.VITE_DEMO_MODE==="true"||m.includes("api-placeholder");class o extends Error{constructor(a,n){super(n),this.status=a,this.name="ApiError"}}async function t(e,a={}){const n=`${m}${e}`,c={"Content-Type":"application/json"},u=localStorage.getItem("authToken");u&&(c.Authorization=`Bearer ${u}`);try{const s=await fetch(n,{...a,headers:{...c,...a.headers}});if(!s.ok){const y=await s.json().catch(()=>({}));throw new o(s.status,y.message||`HTTP ${s.status}: ${s.statusText}`)}const d=await s.text();return d?JSON.parse(d):{}}catch(s){throw s instanceof o?s:new o(0,s instanceof Error?s.message:"Network error")}}const h={async getDatabaseStats(){if(r)return Promise.resolve({totalUsers:12,totalDocuments:247,totalTenants:3,totalRoles:5,totalPermissions:15,totalAuditEntries:156,databaseSize:"15.2 MB",lastBackup:new Date().toISOString(),systemHealth:{database:!0,redis:!0,elasticsearch:!0}});const e=await t("/admin/database-stats");return{totalUsers:e.users,totalDocuments:e.documents,totalTenants:e.tenants,totalRoles:e.roles,totalPermissions:e.documentPermissions,totalAuditEntries:e.documentAudits+e.userAudits+e.tenantAudits,databaseSize:"0 MB",lastBackup:null,systemHealth:{database:e.databaseStatus==="healthy",redis:!0,elasticsearch:!0}}},async getSampleDataStatus(){if(r)return Promise.resolve({hasSampleData:!0,counts:{users:12,documents:247,tenants:3}});const e=await t("/admin/sample-data-status");return{hasSampleData:e.hasSampleData,counts:{users:e.totalUsers,documents:e.totalDocuments,tenants:e.sampleTenantsCount}}},async seedSampleData(){return r?Promise.resolve({message:"Demo data is already available in production mode",seededCounts:{tenants:3,users:12,documents:247,tags:25,permissions:15,auditEntries:156}}):t("/admin/seed-sample-data",{method:"POST"})},async clearAllData(e){return t(`/admin/clear-all-data?confirmationToken=${e}`,{method:"DELETE"})},async createAdminUser(e){return t("/admin/create-admin-user",{method:"POST",body:JSON.stringify(e)})}},p={async getDocuments(e){const a=new URLSearchParams;e?.page&&a.append("page",e.page.toString()),e?.pageSize&&a.append("pageSize",e.pageSize.toString()),e?.searchTerm&&a.append("searchTerm",e.searchTerm),e?.tenantId&&a.append("tenantId",e.tenantId);const n=a.toString();return t(`/documents${n?`?${n}`:""}`)},async getDocument(e){return t(`/documents/${e}`)},async createDocument(e){return t("/documents",{method:"POST",body:JSON.stringify(e)})},async updateDocument(e,a){return t(`/documents/${e}`,{method:"PUT",body:JSON.stringify(a)})},async deleteDocument(e){return t(`/documents/${e}`,{method:"DELETE"})}},g={async getCurrentUser(){return t("/users/me")},async updateProfile(e){return t("/users/me",{method:"PUT",body:JSON.stringify(e)})},async getUsers(){return t("/users")}},S={async login(e){return t("/auth/login",{method:"POST",body:JSON.stringify(e)})},async register(e){return t("/auth/register",{method:"POST",body:JSON.stringify(e)})},async logout(){return t("/auth/logout",{method:"POST"})},async refreshToken(){return t("/auth/refresh",{method:"POST"})}},f={async check(){return t("/health")}},A={admin:h,documents:p,users:g,auth:S,health:f};export{T as D,k as H,x as S,A as a};
