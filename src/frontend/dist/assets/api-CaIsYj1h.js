import{c as h}from"./index-BQ2pZXqV.js";/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const T=h("Download",[["path",{d:"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4",key:"ih7n3h"}],["polyline",{points:"7 10 12 15 17 10",key:"2ggqvy"}],["line",{x1:"12",x2:"12",y1:"15",y2:"3",key:"1vk2je"}]]),d={},l=d.VITE_API_BASE_URL||"http://localhost:5001/api",r=d.VITE_DEMO_MODE==="true"||l.includes("api-placeholder");class o extends Error{constructor(s,n){super(n),this.status=s,this.name="ApiError"}}async function e(t,s={}){const n=`${l}${t}`,i={"Content-Type":"application/json"},u=localStorage.getItem("authToken");u&&(i.Authorization=`Bearer ${u}`);try{const a=await fetch(n,{...s,headers:{...i,...s.headers}});if(!a.ok){const m=await a.json().catch(()=>({}));throw new o(a.status,m.message||`HTTP ${a.status}: ${a.statusText}`)}const c=await a.text();return c?JSON.parse(c):{}}catch(a){throw a instanceof o?a:new o(0,a instanceof Error?a.message:"Network error")}}const p={async getDatabaseStats(){if(r)return Promise.resolve({totalUsers:12,totalDocuments:247,totalTenants:3,totalRoles:5,totalPermissions:15,totalAuditEntries:156,databaseSize:"15.2 MB",lastBackup:new Date().toISOString(),systemHealth:{database:!0,redis:!0,elasticsearch:!0}});const t=await e("/admin/database-stats");return{totalUsers:t.users,totalDocuments:t.documents,totalTenants:t.tenants,totalRoles:t.roles,totalPermissions:t.documentPermissions,totalAuditEntries:t.documentAudits+t.userAudits+t.tenantAudits,databaseSize:"0 MB",lastBackup:null,systemHealth:{database:t.databaseStatus==="healthy",redis:!0,elasticsearch:!0}}},async getSampleDataStatus(){if(r)return Promise.resolve({hasSampleData:!0,counts:{users:12,documents:247,tenants:3}});const t=await e("/admin/sample-data-status");return{hasSampleData:t.hasSampleData,counts:{users:t.totalUsers,documents:t.totalDocuments,tenants:t.sampleTenantsCount}}},async seedSampleData(){return r?Promise.resolve({message:"Demo data is already available in production mode",seededCounts:{tenants:3,users:12,documents:247,tags:25,permissions:15,auditEntries:156}}):e("/admin/seed-sample-data",{method:"POST"})},async clearAllData(t){return e(`/admin/clear-all-data?confirmationToken=${t}`,{method:"DELETE"})},async createAdminUser(t){return e("/admin/create-admin-user",{method:"POST",body:JSON.stringify(t)})}},y={async getDocuments(t){const s=new URLSearchParams;t?.page&&s.append("page",t.page.toString()),t?.pageSize&&s.append("pageSize",t.pageSize.toString()),t?.searchTerm&&s.append("searchTerm",t.searchTerm),t?.tenantId&&s.append("tenantId",t.tenantId);const n=s.toString();return e(`/documents${n?`?${n}`:""}`)},async getDocument(t){return e(`/documents/${t}`)},async createDocument(t){return e("/documents",{method:"POST",body:JSON.stringify(t)})},async updateDocument(t,s){return e(`/documents/${t}`,{method:"PUT",body:JSON.stringify(s)})},async deleteDocument(t){return e(`/documents/${t}`,{method:"DELETE"})}},g={async getCurrentUser(){return e("/users/me")},async updateProfile(t){return e("/users/me",{method:"PUT",body:JSON.stringify(t)})},async getUsers(){return e("/users")}},S={async login(t){return e("/auth/login",{method:"POST",body:JSON.stringify(t)})},async register(t){return e("/auth/register",{method:"POST",body:JSON.stringify(t)})},async logout(){return e("/auth/logout",{method:"POST"})},async refreshToken(){return e("/auth/refresh",{method:"POST"})}},f={async check(){return e("/health")}},E={admin:p,documents:y,users:g,auth:S,health:f};export{T as D,E as a,e as f};
