const u={},m=u.VITE_API_BASE_URL||"http://localhost:5001/api",a=u.VITE_DEMO_MODE==="true"||m.includes("api-placeholder");class o extends Error{constructor(t,s){super(s),this.status=t,this.name="ApiError"}}async function n(e,t={}){const s=`${m}${e}`,i={"Content-Type":"application/json"},c=localStorage.getItem("authToken");c&&(i.Authorization=`Bearer ${c}`);try{const r=await fetch(s,{...t,headers:{...i,...t.headers}});if(!r.ok){const d=await r.json().catch(()=>({}));throw new o(r.status,d.message||`HTTP ${r.status}: ${r.statusText}`)}const l=await r.text();return l?JSON.parse(l):{}}catch(r){throw r instanceof o?r:new o(0,r instanceof Error?r.message:"Network error")}}const g={async getDatabaseStats(){if(a)return Promise.resolve({totalUsers:12,totalDocuments:247,totalTenants:3,totalRoles:5,totalPermissions:15,totalAuditEntries:156,databaseSize:"15.2 MB",lastBackup:new Date().toISOString(),systemHealth:{database:!0,redis:!0,elasticsearch:!0}});const e=await n("/admin/database-stats");return{totalUsers:e.users,totalDocuments:e.documents,totalTenants:e.tenants,totalRoles:e.roles,totalPermissions:e.documentPermissions,totalAuditEntries:e.documentAudits+e.userAudits+e.tenantAudits,databaseSize:"0 MB",lastBackup:null,systemHealth:{database:e.databaseStatus==="healthy",redis:!0,elasticsearch:!0}}},async getSampleDataStatus(){if(a)return Promise.resolve({hasSampleData:!0,counts:{users:12,documents:247,tenants:3}});const e=await n("/admin/sample-data-status");return{hasSampleData:e.hasSampleData,counts:{users:e.totalUsers,documents:e.totalDocuments,tenants:e.sampleTenantsCount}}},async seedSampleData(){return a?Promise.resolve({message:"Demo data is already available in production mode",seededCounts:{tenants:3,users:12,documents:247,tags:25,permissions:15,auditEntries:156}}):n("/admin/seed-sample-data",{method:"POST"})},async clearAllData(e){return n(`/admin/clear-all-data?confirmationToken=${e}`,{method:"DELETE"})},async createAdminUser(e){return n("/admin/create-admin-user",{method:"POST",body:JSON.stringify(e)})}},h={async getDocuments(e){const t=new URLSearchParams;e?.page&&t.append("page",e.page.toString()),e?.pageSize&&t.append("pageSize",e.pageSize.toString()),e?.searchTerm&&t.append("searchTerm",e.searchTerm),e?.tenantId&&t.append("tenantId",e.tenantId);const s=t.toString();return n(`/documents${s?`?${s}`:""}`)},async getDocument(e){return n(`/documents/${e}`)},async createDocument(e){return n("/documents",{method:"POST",body:JSON.stringify(e)})},async updateDocument(e,t){return n(`/documents/${e}`,{method:"PUT",body:JSON.stringify(t)})},async deleteDocument(e){return n(`/documents/${e}`,{method:"DELETE"})}},p={async getCurrentUser(){return n("/users/me")},async updateProfile(e){return n("/users/me",{method:"PUT",body:JSON.stringify(e)})},async getUsers(){return n("/users")}},f={async login(e){return n("/auth/login",{method:"POST",body:JSON.stringify(e)})},async register(e){return n("/auth/register",{method:"POST",body:JSON.stringify(e)})},async logout(){return n("/auth/logout",{method:"POST"})},async refreshToken(){return n("/auth/refresh",{method:"POST"})}},y={async check(){return n("/health")}},S={async getPlatformMetrics(){return a?Promise.resolve({totalClients:47,activeClients:42,totalUsers:1247,activeUsers:892,totalDocuments:15678,monthlyRecurringRevenue:18950,annualRecurringRevenue:227400,platformHealth:{apiResponseTime:145,databaseHealth:!0,systemUptime:99.97,activeIncidents:0}}):n("/platform-admin/metrics")},async getClients(){return a?Promise.resolve([{id:"client-1",name:"Acme Legal Partners",subdomain:"acme-legal",domain:"acmelegal.com",tier:"Enterprise",status:"Active",userCount:156,documentCount:2847,storageUsedMB:1024,storageQuotaMB:5120,monthlyRevenue:2499,annualContract:29988,createdAt:"2024-03-15T10:30:00Z",lastActive:"2025-07-25T10:30:00Z",healthScore:98,supportTickets:2,billingContact:{name:"Sarah Johnson",email:"billing@acmelegal.com"},technicalContact:{name:"Michael Chen",email:"tech@acmelegal.com"},features:["SSO","API Access","Custom Branding","Advanced Analytics","Priority Support"],customBranding:!0,ssoEnabled:!0,apiAccess:!0},{id:"client-2",name:"TechStart Innovation",subdomain:"techstart",tier:"Professional",status:"Active",userCount:28,documentCount:445,storageUsedMB:256,storageQuotaMB:1024,monthlyRevenue:799,createdAt:"2024-11-08T14:22:00Z",lastActive:"2025-07-25T09:15:00Z",healthScore:95,supportTickets:0,billingContact:{name:"Alex Thompson",email:"alex@techstart.io"},technicalContact:{name:"Jamie Rodriguez",email:"jamie@techstart.io"},features:["Standard Support","Team Collaboration","Document Templates"],customBranding:!1,ssoEnabled:!1,apiAccess:!0},{id:"client-3",name:"Global Consulting Group",subdomain:"global-consulting",domain:"globalconsulting.com",tier:"Enterprise",status:"Trial",userCount:75,documentCount:1203,storageUsedMB:512,storageQuotaMB:5120,monthlyRevenue:0,createdAt:"2025-07-10T08:45:00Z",lastActive:"2025-07-25T11:45:00Z",healthScore:87,supportTickets:3,billingContact:{name:"Robert Kim",email:"finance@globalconsulting.com"},technicalContact:{name:"Lisa Wang",email:"lisa.wang@globalconsulting.com"},features:["Trial Access","SSO","Custom Branding","Advanced Analytics"],customBranding:!0,ssoEnabled:!0,apiAccess:!1}]):n("/platform-admin/clients")},async getClient(e){if(a){const s=(await this.getClients()).find(i=>i.id===e);if(!s)throw new o(404,"Client not found");return{...s,activeUsers:Math.floor(s.userCount*.7),adminUsers:Math.floor(s.userCount*.1),documentsThisMonth:Math.floor(s.documentCount*.3),publicDocuments:Math.floor(s.documentCount*.1)}}return n(`/platform-admin/clients/${e}`)},async createClient(e){return a?Promise.resolve({id:`client-${Date.now()}`,name:e.name,subdomain:e.subdomain,domain:e.domain,tier:e.tier,status:"Active",userCount:0,documentCount:0,storageUsedMB:0,storageQuotaMB:e.tier==="Enterprise"?5120:1024,monthlyRevenue:e.tier==="Enterprise"?2499:e.tier==="Professional"?799:0,annualContract:e.tier==="Enterprise"?29988:e.tier==="Professional"?9588:null,createdAt:new Date().toISOString(),lastActive:new Date().toISOString(),healthScore:100,supportTickets:0,billingContact:{name:e.billingContactName||"Billing Contact",email:e.billingContactEmail||`billing@${e.subdomain}.com`},technicalContact:{name:e.technicalContactName||"Technical Contact",email:e.technicalContactEmail||`tech@${e.subdomain}.com`},features:e.tier==="Enterprise"?["SSO","API Access","Custom Branding"]:e.tier==="Professional"?["API Access","Team Collaboration"]:["Trial Access"],customBranding:e.tier==="Enterprise",ssoEnabled:e.tier==="Enterprise",apiAccess:e.tier!=="Trial"}):n("/platform-admin/clients",{method:"POST",body:JSON.stringify(e)})},async updateClient(e,t){if(a){const s=await this.getClient(e);return{...s,...t,status:t.isActive!==void 0?t.isActive?"Active":"Inactive":s.status}}return n(`/platform-admin/clients/${e}`,{method:"PUT",body:JSON.stringify(t)})}},A={async getClientUsers(e){return a?Promise.resolve([{id:"user-1",firstName:"John",lastName:"Smith",email:"john.smith@example.com",role:"Client.Admin",isActive:!0,createdAt:"2024-01-15T10:30:00Z",lastLoginAt:"2025-07-25T08:45:00Z",documentCount:25,storageUsedMB:150}]):n(`/client-management/${e}/users`)},async getClientDocuments(e,t=1,s=50){return a?Promise.resolve({items:[{id:"doc-1",title:"Sample Document",authorName:"John Smith",createdAt:"2025-07-20T10:30:00Z",updatedAt:"2025-07-25T14:22:00Z",publicAccessLevel:"Private",tags:["legal","contract"],sizeBytes:2048,viewCount:45}],totalCount:1,page:1,pageSize:50,totalPages:1}):n(`/client-management/${e}/documents?page=${t}&pageSize=${s}`)},async suspendClient(e,t){return a?Promise.resolve({message:"Client organization suspended successfully"}):n(`/client-management/${e}/suspend`,{method:"POST",body:JSON.stringify({reason:t})})},async reactivateClient(e){return a?Promise.resolve({message:"Client organization reactivated successfully"}):n(`/client-management/${e}/reactivate`,{method:"POST"})},async deleteClient(e,t){return a?Promise.resolve({message:"Client organization deleted successfully",deletedData:{clientName:"Demo Client",userCount:5,documentCount:25}}):n(`/client-management/${e}?confirmationToken=${t}`,{method:"DELETE"})},async createAdminUser(e,t){return a?Promise.resolve({id:`user-${Date.now()}`,firstName:t.firstName,lastName:t.lastName,email:t.email,role:"Client.Admin",isActive:!0,createdAt:new Date().toISOString(),lastLoginAt:null,documentCount:0,storageUsedMB:0}):n(`/client-management/${e}/admin-user`,{method:"POST",body:JSON.stringify(t)})},async updateSubscription(e,t){return a?Promise.resolve({message:"Subscription updated successfully",oldTier:"Professional",newTier:t}):n(`/client-management/${e}/subscription`,{method:"PUT",body:JSON.stringify({tier:t})})}},C={admin:g,documents:h,users:p,auth:f,health:y,platformAdmin:S,clientManagement:A};export{o as ApiError,g as adminApi,f as authApi,A as clientManagementApi,C as default,h as documentApi,y as healthApi,S as platformAdminApi,p as userApi};
